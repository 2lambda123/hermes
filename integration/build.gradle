repositories {
    mavenCentral()
    maven { url 'https://repository.jboss.org/nexus/content/groups/public' }
}

project.configurations {
    integration {
        extendsFrom project.configurations.runtimeClasspath
        description = 'Dependencies for integration tests'
        transitive = true
        visible = true
    }
    alpnboot
}

dependencies {
    implementation project(':hermes-common')
    implementation project(':hermes-consumers')
    implementation project(':hermes-frontend')
    implementation project(':hermes-management')
    implementation project(':hermes-client')
    implementation project(':hermes-tracker')

    testImplementation project(':hermes-test-helper')
    testImplementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.0'
    testImplementation group: 'commons-beanutils', name: 'commons-beanutils', version: '1.9.4'
    testImplementation group: 'org.apache.curator', name: 'curator-test', version: versions.curator
    testImplementation group: 'org.springframework', name: 'spring-webflux', version: versions.spring_web
    testImplementation group: 'com.squareup.okhttp3', name: 'okhttp', version: versions.okhttp

    testImplementation group: 'org.testcontainers', name: 'testcontainers', version: versions.testcontainers
    testImplementation group: 'org.testcontainers', name: 'gcloud', version: versions.testcontainers

    testImplementation files('./lib/schema-repo-server-0.1.3-jersey2.jar');
    testImplementation group: 'org.glassfish.jersey.containers', name: 'jersey-container-grizzly2-http', version: versions.jersey
    testImplementation group: 'org.freemarker', name: 'freemarker', version: '2.3.21'
    testImplementation group: 'org.schemarepo', name: 'schema-repo-common', version: '0.1.3'
    testImplementation group: 'org.eclipse.jetty', name: 'jetty-alpn-openjdk8-server', version: '9.4.28.v20200408'
    testImplementation group: 'org.eclipse.jetty', name: 'jetty-alpn-openjdk8-client', version: '9.4.30.v20200611'
    testImplementation group: 'org.eclipse.jetty', name: 'jetty-servlet', version: versions.jetty
    testImplementation group: 'org.eclipse.jetty', name: 'jetty-servlets', version: versions.jetty
    testImplementation group: 'org.glassfish.jersey.bundles.repackaged', name: 'jersey-guava', version: '2.23.2'

    testImplementation(group: 'org.hornetq', name: 'hornetq-jms-server', version: '2.4.1.Final') {
        exclude module: 'hornetq-native'
    }

    testImplementation group: 'org.eclipse.jetty.alpn', name: 'alpn-api', version: versions.alpn_api
}

project.sourceSets {
    integration {
        java.srcDir project.file('src/integration/java')

        resources.srcDir project.file('src/integration/resources')
        resources.srcDir project.sourceSets.test.resources
        resources.srcDir project.sourceSets.main.resources

        project.plugins.withType(GroovyPlugin) {
            groovy.srcDir project.file('src/integration/groovy')
        }

        compileClasspath = project.sourceSets.main.output +
                project.configurations.runtimeClasspath +
                project.configurations.integration
        runtimeClasspath = output + compileClasspath + project.configurations.runtimeClasspath
    }
}

task integrationTest(type: Test) {
    logging.captureStandardOutput LogLevel.INFO

    def args = []
    if (project.hasProperty('tests.timeout.multiplier')) {
        args += "-Dtests.timeout.multiplier=${project.property('tests.timeout.multiplier')}"
    }

    if (project.hasProperty("confluentImagesTag")) {
        args += "-DconfluentImagesTag=${project.property("confluentImagesTag")}"
    }

    jvmArgs = args
    minHeapSize "2000m"
    maxHeapSize "3500m"

    group = 'Verification'
    description = 'Runs the integration tests.'

    testClassesDirs = project.sourceSets.integration.output.classesDirs
    classpath = project.sourceSets.integration.runtimeClasspath

    useTestNG {
        preserveOrder true
    }

    testLogging {
        exceptionFormat = 'full'
        events "passed", "skipped", "failed", "standardError", "standardOut"
    }
}
